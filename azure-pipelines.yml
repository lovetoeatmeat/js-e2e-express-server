# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

#trigger:
#- main


pool:
  vmImage: 'ubuntu-20.04'
  #testAgentPool

variables:
  targetBranch: $(System.PullRequest.TargetBranch)


stages:
- stage: aaa
  jobs:
  #- job:
  #  steps:
  #    - checkout: self # Required as first property. Configures checkout for the specified repository.
  #      clean: true # If true, run git clean -ffdx followed by git reset --hard HEAD before fetching.
  #      timeoutInMinutes: 5 # Time to wait for this task to complete before the server kills it.
  #      retryCountOnTaskFailure: 5 # Number of retries if the task fails.
  #      displayName: checkoutStage # Human-readable name for the task.
    
  - job:
    steps:
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            echo $(SYSTEM_PULLREQUEST_TARGETBRANCH)
            echo $targetBranch
            echo $(System.PullRequest.TargetBranch)
            
            echo $(System.PullRequest.targetBranchName)
            echo 'Hello world'



- stage: approval
  condition: succeeded()
  jobs:
  - deployment: approvalStage
    displayName: approval Web stage
    environment:
      name: testEnv
    strategy:
       runOnce:
         deploy:
          steps:
            - script: echo $(System.PullRequest.TargetBranch)
                      echo $(System.PullRequest.targetBranchName)

  
  


- stage: deploy
  condition: succeeded()
  jobs:
  

  - job:
    steps:
      - task: SSH@0
        inputs:
          sshEndpoint: 'Windows11MightZ'
          runOptions: 'inline'
          inline: 'Write-Host "Hello World"'
          readyTimeout: '20000'
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Install Node.js'

      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
                pip install selenium
                Get-ChildItem -Path C:\SeleniumWebDrivers\ChromeDriver
        condition: succeeded()
      
      - script: |
          npm install
          npm run build
        displayName: 'npm install and build'

      - task: PythonScript@0
        inputs:
          scriptSource: 'inline'
          script: |
            from selenium import webdriver
            from selenium.webdriver.chrome.service import Service
      
            # 设置 Chrome WebDriver 的路径
            chrome_driver_path = 'C:\SeleniumWebDrivers\ChromeDriver'
      
            # 创建 Chrome WebDriver 服务
            chrome_service = Service(chrome_driver_path)
            chrome_service.start()
      
            # 创建 Chrome WebDriver 实例
            driver = webdriver.Chrome(service=chrome_service)
      
            # 打开网页
            driver.get("https://www.google.com")
      
            # 关闭浏览器
            driver.quit()
      
            # 停止 Chrome WebDriver 服务
            chrome_service.stop()
